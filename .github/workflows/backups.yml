name: Backup Service

on:
  workflow_dispatch:
    inputs:
      name:
        description: App Name
        required: true
        type: choice
        options:
        - core-services
        - radarr
        - sonarr
        - utorrent
        - bookstack
        - flaresolverr
        - ombi
        - prowlarr
      environment:
        type: choice
        description: Environment Tag
        options: 
        - prod
        - dev
        default: prod
      server:
        type: choice
        options:
        - 'ks5.pknw1.co.uk'
        - 'uk.pknw1.co.uk'
      docker_root:
        required: true
        default: '/etc/pknw1/docker'
      backup_service:  
        description: 'Backup Service Repo'
        required: true
        type: boolean
        default: true
      backup_config:  
        description: 'Backup Config Repo'
        required: true
        type: boolean
        default: true

env:
  GH_TOKEN: ${{ secrets.GH_ORG }}
  ORG_TOKEN: ${{ secrets.GH_ORG }}
  SOME_SECRET: some-secret-value
  
jobs:
  backup_service:
    runs-on: ubuntu-latest
    if:  ${{ inputs.backup_service }} 
    steps:
    - uses: actions/checkout@v3
    - name: executing remote ssh commands using password
      uses: appleboy/ssh-action@v1.2.0
      with:
        host: ${{ inputs.server }} 
        username:  ${{ secrets.SSH_USER }}
        key: ${{ secrets.SSH_KEY }}
        port: ${{ secrets.SSH_PORT }}
        script: cd "${{ inputs.docker_root }}/${{ inputs.name }}-${{ inputs.environment }}" && sudo git config --global --add safe.directory $(pwd)
    - name: executing remote ssh commands using password
      uses: appleboy/ssh-action@v1.2.0
      with:
        host: ${{ secrets.SSH_SERVER }}
        username:  ${{ secrets.SSH_USER }}
        key: ${{ secrets.SSH_KEY }}
        port: ${{ secrets.SSH_PORT }}
        script: cd "${{ inputs.docker_root }}/${{ inputs.name }}-${{ inputs.environment }}" && echo $(date) > ver  && git add . && git commit -m "auto" && git push


  backup_config:
    runs-on: ubuntu-latest
    if:  ${{ inputs.backup_config }} 
    steps:
    - uses: actions/checkout@v3
    - name: executing remote stop
      uses: appleboy/ssh-action@v1.2.0
      with:
        host: ${{ inputs.server }} 
        username:  ${{ secrets.SSH_USER }}
        key: ${{ secrets.SSH_KEY }}
        port: ${{ secrets.SSH_PORT }}
        script:  cd "${{ inputs.docker_root }}/${{ inputs.name }}-${{ inputs.environment }}" && docker compose stop
    - name: executing remote git config
      uses: appleboy/ssh-action@v1.2.0
      with:
        host: ${{ inputs.server }} 
        username:  ${{ secrets.SSH_USER }}
        key: ${{ secrets.SSH_KEY }}
        port: ${{ secrets.SSH_PORT }}
        script:  cd "${{ inputs.docker_root }}/${{ inputs.name }}-${{ inputs.environment }}/config" && sudo git config --global --add safe.directory $(pwd)
    - name: executing git add
      uses: appleboy/ssh-action@v1.2.0
      with:
        host: ${{ inputs.server }} 
        username:  ${{ secrets.SSH_USER }}
        key: ${{ secrets.SSH_KEY }}
        port: ${{ secrets.SSH_PORT }}
        script:  cd "${{ inputs.docker_root }}/${{ inputs.name }}-${{ inputs.environment }}/config" && echo $(date) > ver && git add . && git commit -m "auto" && git push
    - name: executing remote start
      uses: appleboy/ssh-action@v1.2.0
      with:
        host: ${{ inputs.server }} 
        username:  ${{ secrets.SSH_USER }}
        key: ${{ secrets.SSH_KEY }}
        port: ${{ secrets.SSH_PORT }}
        script:  cd "${{ inputs.docker_root }}/${{ inputs.name }}-${{ inputs.environment }}" && docker compose start
